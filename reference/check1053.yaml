openapi: 3.1.0
x-stoplight:
  id: 9o0jw8wqlgrjl
info:
  title: check1053
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
security:
  - SpsBearer: []
paths:
  '/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: Id of an existing user.
    get:
      summary: Get User Info by User ID
      tags: []
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
        '404':
          description: User Not Found
          content:
            application/json:
              schema:
                type: object
                $ref: 'stoplight://resources/overrides/lfbSFnTX40k'
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
      x-stoplight:
        id: wdv6qgx2zddgm
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: 'stoplight://resources/overrides/2jyMLo8vP70'
    patch:
      summary: Update User Information
      operationId: patch-users-userId
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    firstName: Rebecca
                    lastName: Baker
                    email: rebecca@gmail.com
                    dateOfBirth: '1985-10-02'
                    emailVerified: false
                    createDate: '2019-08-24'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
      description: Update the information of an existing user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  description: 'If a new email is given, the user''s email verified property will be set to false.'
                dateOfBirth:
                  type: string
            examples:
              Update First Name:
                value:
                  firstName: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: '1985-10-02'
        description: Patch user properties to update.
      x-stoplight:
        id: firaatry14gxa
  /user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
      x-stoplight:
        id: f1rsu46vngfuc
  /test/check1053:
    get:
      summary: test-get
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: 'stoplight://resources/overrides/lfbSFnTX40k'
      operationId: get-test-check1053
      x-stoplight:
        id: sertzt5erasld
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: 'stoplight://resources/overrides/DdHN7UYMiVo'
    post:
      summary: test-post
      tags: []
      responses: {}
      operationId: post-test-check1053
      x-stoplight:
        id: v748cfe991dig
components:
  schemas:
    User:
      type: object
      $ref: 'stoplight://resources/overrides/lfbSFnTX40k'
      x-stoplight:
        id: cmeieou2v9107
    user1:
      title: user1
      x-stoplight:
        id: z6gw0yn6z6zee
      type: object
      properties:
        refer-mask:
          $ref: 'stoplight://resources/overrides/2jyMLo8vP70'
          x-stoplight:
            id: y0l8xs809mngv
  securitySchemes:
    SpsBearer:
      type: http
      scheme: bearer
      description: |-
        Bearer authentication specifies a bearer token in the 'Authorization' header following the format:
        Authorization: Bearer <token>
